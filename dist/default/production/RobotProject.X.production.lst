

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec  6 12:44:06 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F2221 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   000786                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _setpoint_distance
    64   000786  012C               	dw	300
    65   000000                     _ADRESL	set	4035
    66   000000                     _ADRESH	set	4036
    67   000000                     _ADCON0	set	4034
    68   000000                     _TRISB	set	3987
    69   000000                     _ADCON0bits	set	4034
    70   000000                     _LATBbits	set	3978
    71   000000                     _PORTCbits	set	3970
    72   000000                     _PORTAbits	set	3968
    73   000000                     _LATAbits	set	3977
    74   000000                     _LATB	set	3978
    75   000000                     _TRISA	set	3986
    76   000000                     _TRISC	set	3988
    77   000000                     _CCP2CON	set	4026
    78   000000                     _CCP1CON	set	4029
    79   000000                     _T2CON	set	4042
    80   000000                     _PR2	set	4043
    81   000000                     _ADCON2	set	4032
    82   000000                     _ADCON1	set	4033
    83   000000                     _CCPR1L	set	4030
    84   000000                     _CCPR2L	set	4027
    85                           
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89   000768                     __pcinit:
    90                           	callstack 0
    91   000768                     start_initialization:
    92                           	callstack 0
    93   000768                     __initialization:
    94                           	callstack 0
    95                           
    96                           ; Initialize objects allocated to COMRAM (2 bytes)
    97                           ; load TBLPTR registers with __pidataCOMRAM
    98   000768  0E86               	movlw	low __pidataCOMRAM
    99   00076A  6EF6               	movwf	tblptrl,c
   100   00076C  0E07               	movlw	high __pidataCOMRAM
   101   00076E  6EF7               	movwf	tblptrh,c
   102   000770  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   103   000772  6EF8               	movwf	tblptru,c
   104   000774  0009               	tblrd		*+	;fetch initializer
   105   000776  CFF5 F01D          	movff	tablat,__pdataCOMRAM
   106   00077A  0009               	tblrd		*+	;fetch initializer
   107   00077C  CFF5 F01E          	movff	tablat,__pdataCOMRAM+1
   108   000780                     end_of_initialization:
   109                           	callstack 0
   110   000780                     __end_of__initialization:
   111                           	callstack 0
   112   000780  0100               	movlb	0
   113   000782  EFC7  F001         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	dataCOMRAM
   116   00001D                     __pdataCOMRAM:
   117                           	callstack 0
   118   00001D                     _setpoint_distance:
   119                           	callstack 0
   120   00001D                     	ds	2
   121                           
   122                           	psect	cstackCOMRAM
   123   000001                     __pcstackCOMRAM:
   124                           	callstack 0
   125   000001                     ?_readleftADC:
   126                           	callstack 0
   127   000001                     ?_readrightADC:
   128                           	callstack 0
   129   000001                     ?___wmul:
   130                           	callstack 0
   131   000001                     ___wmul@multiplier:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x0
   135   000001                     	ds	2
   136   000003                     ??_readleftADC:
   137   000003                     ??_readrightADC:
   138   000003                     ___wmul@multiplicand:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x2
   142   000003                     	ds	2
   143   000005                     ___wmul@product:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x4
   147   000005                     	ds	2
   148   000007                     ?___awdiv:
   149                           	callstack 0
   150   000007                     ___awdiv@dividend:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0x6
   154   000007                     	ds	2
   155   000009                     ___awdiv@divisor:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x8
   159   000009                     	ds	2
   160   00000B                     ___awdiv@counter:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0xA
   164   00000B                     	ds	1
   165   00000C                     ___awdiv@sign:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0xB
   169   00000C                     	ds	1
   170   00000D                     ___awdiv@quotient:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0xC
   174   00000D                     	ds	2
   175   00000F                     wait10ms@del:
   176                           	callstack 0
   177   00000F                     turn@dir:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0xE
   181   00000F                     	ds	2
   182   000011                     ??_wait10ms:
   183   000011                     turn@ang:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x10
   187   000011                     	ds	1
   188   000012                     wait10ms@c:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x11
   192   000012                     	ds	1
   193   000013                     ??_turn:
   194                           
   195                           ; 1 bytes @ 0x12
   196   000013                     	ds	1
   197   000014                     acc@dir:
   198                           	callstack 0
   199   000014                     flashLEDs@dur:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x13
   203   000014                     	ds	1
   204   000015                     turn@temp:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x14
   208   000015                     	ds	1
   209   000016                     acc@dur:
   210                           	callstack 0
   211   000016                     flashLEDs@i:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x15
   215   000016                     	ds	1
   216   000017                     turn@temp_459:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x16
   220   000017                     	ds	1
   221   000018                     
   222                           ; 1 bytes @ 0x17
   223   000018                     	ds	1
   224   000019                     turn@ticks:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x18
   228   000019                     	ds	2
   229   00001B                     turn@count:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x1A
   233   00001B                     	ds	2
   234   00001D                     
   235                           ; 1 bytes @ 0x1C
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 42 in file "general.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  2   62[None  ] int 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1
   255 ;;      Params:         0       0       0
   256 ;;      Locals:         0       0       0
   257 ;;      Temps:          0       0       0
   258 ;;      Totals:         0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called: 2
   261 ;; This function calls:
   262 ;;		_acc
   263 ;;		_facebeacon
   264 ;;		_flashLEDs
   265 ;;		_readleftADC
   266 ;;		_readrightADC
   267 ;;		_turn
   268 ;;		_wait10ms
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text0
   275   00038E                     __ptext0:
   276                           	callstack 0
   277   00038E                     _main:
   278                           	callstack 29
   279   00038E                     
   280                           ;general.c: 52:     TRISC = 0b11111001;
   281   00038E  0EF9               	movlw	249
   282   000390  6E94               	movwf	148,c	;volatile
   283                           
   284                           ;general.c: 53:     TRISA = 0b00001111;
   285   000392  0E0F               	movlw	15
   286   000394  6E92               	movwf	146,c	;volatile
   287                           
   288                           ;general.c: 54:     TRISB = 0b11000000;
   289   000396  0EC0               	movlw	192
   290   000398  6E93               	movwf	147,c	;volatile
   291   00039A                     
   292                           ;general.c: 56:     PR2 = 0b11111111 ;
   293   00039A  68CB               	setf	203,c	;volatile
   294                           
   295                           ;general.c: 57:     T2CON = 0b00000111 ;
   296   00039C  0E07               	movlw	7
   297   00039E  6ECA               	movwf	202,c	;volatile
   298                           
   299                           ;general.c: 58:     CCP1CON = (0x0c);
   300   0003A0  0E0C               	movlw	12
   301   0003A2  6EBD               	movwf	189,c	;volatile
   302                           
   303                           ;general.c: 59:     CCP2CON = (0x0c);
   304   0003A4  0E0C               	movlw	12
   305   0003A6  6EBA               	movwf	186,c	;volatile
   306                           
   307                           ;general.c: 60:     CCPR1L = 125;
   308   0003A8  0E7D               	movlw	125
   309   0003AA  6EBE               	movwf	190,c	;volatile
   310                           
   311                           ;general.c: 61:     CCPR2L = 125;
   312   0003AC  0E7D               	movlw	125
   313   0003AE  6EBB               	movwf	187,c	;volatile
   314                           
   315                           ;general.c: 62:     ADCON1=0b00001101;
   316   0003B0  0E0D               	movlw	13
   317   0003B2  6EC1               	movwf	193,c	;volatile
   318                           
   319                           ;general.c: 63:     ADCON2 = 0b10000010;
   320   0003B4  0E82               	movlw	130
   321   0003B6  6EC0               	movwf	192,c	;volatile
   322                           
   323                           ;general.c: 64:     LATB=0;
   324   0003B8  0E00               	movlw	0
   325   0003BA  6E8A               	movwf	138,c	;volatile
   326   0003BC                     
   327                           ;general.c: 66:     flashLEDs(300);
   328   0003BC  0E01               	movlw	1
   329   0003BE  6E15               	movwf	(flashLEDs@dur+1)^0,c
   330   0003C0  0E2C               	movlw	44
   331   0003C2  6E14               	movwf	flashLEDs@dur^0,c
   332   0003C4  ECAE  F002         	call	_flashLEDs	;wreg free
   333   0003C8                     l1112:
   334                           
   335                           ;general.c: 69:         facebeacon();
   336   0003C8  ECEB  F002         	call	_facebeacon	;wreg free
   337   0003CC                     
   338                           ;general.c: 70:         if(readleftADC() >= setpoint_distance || readrightADC() >= setpo
      +                          int_distance){
   339   0003CC  ECA1  F003         	call	_readleftADC	;wreg free
   340   0003D0  0E2C               	movlw	44
   341   0003D2  5C01               	subwf	?_readleftADC^0,w,c
   342   0003D4  0E01               	movlw	1
   343   0003D6  5802               	subwfb	(?_readleftADC+1)^0,w,c
   344   0003D8  B0D8               	btfsc	status,0,c
   345   0003DA  EFF1  F001         	goto	u631
   346   0003DE  EFF3  F001         	goto	u630
   347   0003E2                     u631:
   348   0003E2  EF00  F002         	goto	l1118
   349   0003E6                     u630:
   350   0003E6  EC8E  F003         	call	_readrightADC	;wreg free
   351   0003EA  0E2C               	movlw	44
   352   0003EC  5C01               	subwf	?_readrightADC^0,w,c
   353   0003EE  0E01               	movlw	1
   354   0003F0  5802               	subwfb	(?_readrightADC+1)^0,w,c
   355   0003F2  A0D8               	btfss	status,0,c
   356   0003F4  EFFE  F001         	goto	u641
   357   0003F8  EF00  F002         	goto	u640
   358   0003FC                     u641:
   359   0003FC  EF3E  F002         	goto	l1124
   360   000400                     u640:
   361   000400                     l1118:
   362                           
   363                           ;general.c: 71:             acc(0, 0);
   364   000400  0E00               	movlw	0
   365   000402  6E15               	movwf	(acc@dir+1)^0,c
   366   000404  0E00               	movlw	0
   367   000406  6E14               	movwf	acc@dir^0,c
   368   000408  0E00               	movlw	0
   369   00040A  6E17               	movwf	(acc@dur+1)^0,c
   370   00040C  0E00               	movlw	0
   371   00040E  6E16               	movwf	acc@dur^0,c
   372   000410  EC28  F003         	call	_acc	;wreg free
   373                           
   374                           ;general.c: 72:             flashLEDs(100);
   375   000414  0E00               	movlw	0
   376   000416  6E15               	movwf	(flashLEDs@dur+1)^0,c
   377   000418  0E64               	movlw	100
   378   00041A  6E14               	movwf	flashLEDs@dur^0,c
   379   00041C  ECAE  F002         	call	_flashLEDs	;wreg free
   380                           
   381                           ;general.c: 73:             wait10ms(10);
   382   000420  0E00               	movlw	0
   383   000422  6E10               	movwf	(wait10ms@del+1)^0,c
   384   000424  0E0A               	movlw	10
   385   000426  6E0F               	movwf	wait10ms@del^0,c
   386   000428  EC5B  F003         	call	_wait10ms	;wreg free
   387                           
   388                           ;general.c: 74:             acc(-1, 100);
   389   00042C  0EFF               	movlw	255
   390   00042E  6E15               	movwf	(acc@dir+1)^0,c
   391   000430  6814               	setf	acc@dir^0,c
   392   000432  0E00               	movlw	0
   393   000434  6E17               	movwf	(acc@dur+1)^0,c
   394   000436  0E64               	movlw	100
   395   000438  6E16               	movwf	acc@dur^0,c
   396   00043A  EC28  F003         	call	_acc	;wreg free
   397   00043E                     
   398                           ;general.c: 75:             turn(-1, 60);
   399   00043E  0EFF               	movlw	255
   400   000440  6E10               	movwf	(turn@dir+1)^0,c
   401   000442  680F               	setf	turn@dir^0,c
   402   000444  0E00               	movlw	0
   403   000446  6E12               	movwf	(turn@ang+1)^0,c
   404   000448  0E3C               	movlw	60
   405   00044A  6E11               	movwf	turn@ang^0,c
   406   00044C  EC01  F001         	call	_turn	;wreg free
   407   000450                     
   408                           ;general.c: 76:             acc(1, 100);
   409   000450  0E00               	movlw	0
   410   000452  6E15               	movwf	(acc@dir+1)^0,c
   411   000454  0E01               	movlw	1
   412   000456  6E14               	movwf	acc@dir^0,c
   413   000458  0E00               	movlw	0
   414   00045A  6E17               	movwf	(acc@dur+1)^0,c
   415   00045C  0E64               	movlw	100
   416   00045E  6E16               	movwf	acc@dur^0,c
   417   000460  EC28  F003         	call	_acc	;wreg free
   418                           
   419                           ;general.c: 77:             turn(1, 60);
   420   000464  0E00               	movlw	0
   421   000466  6E10               	movwf	(turn@dir+1)^0,c
   422   000468  0E01               	movlw	1
   423   00046A  6E0F               	movwf	turn@dir^0,c
   424   00046C  0E00               	movlw	0
   425   00046E  6E12               	movwf	(turn@ang+1)^0,c
   426   000470  0E3C               	movlw	60
   427   000472  6E11               	movwf	turn@ang^0,c
   428   000474  EC01  F001         	call	_turn	;wreg free
   429                           
   430                           ;general.c: 78:         }
   431   000478  EFE4  F001         	goto	l1112
   432   00047C                     l1124:
   433                           
   434                           ;general.c: 80:             acc(1, 10);
   435   00047C  0E00               	movlw	0
   436   00047E  6E15               	movwf	(acc@dir+1)^0,c
   437   000480  0E01               	movlw	1
   438   000482  6E14               	movwf	acc@dir^0,c
   439   000484  0E00               	movlw	0
   440   000486  6E17               	movwf	(acc@dur+1)^0,c
   441   000488  0E0A               	movlw	10
   442   00048A  6E16               	movwf	acc@dur^0,c
   443   00048C  EC28  F003         	call	_acc	;wreg free
   444   000490  EFE4  F001         	goto	l1112
   445   000494  EF00  F000         	goto	start
   446   000498                     __end_of_main:
   447                           	callstack 0
   448                           
   449 ;; *************** function _turn *****************
   450 ;; Defined at:
   451 ;;		line 147 in file "general.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  dir             2   14[COMRAM] int 
   454 ;;  ang             2   16[COMRAM] int 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  temp            2   22[COMRAM] int 
   457 ;;  temp            2   20[COMRAM] int 
   458 ;;  count           2   26[COMRAM] int 
   459 ;;  ticks           2   24[COMRAM] int 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1
   469 ;;      Params:         4       0       0
   470 ;;      Locals:         8       0       0
   471 ;;      Temps:          2       0       0
   472 ;;      Totals:        14       0       0
   473 ;;Total ram usage:       14 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 1
   476 ;; This function calls:
   477 ;;		___awdiv
   478 ;;		___wmul
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text1
   485   000202                     __ptext1:
   486                           	callstack 0
   487   000202                     _turn:
   488                           	callstack 29
   489   000202                     
   490                           ;general.c: 148:     int ticks = 5 * ang/2;
   491   000202  C011  F001         	movff	turn@ang,___wmul@multiplier
   492   000206  C012  F002         	movff	turn@ang+1,___wmul@multiplier+1
   493   00020A  0E00               	movlw	0
   494   00020C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   495   00020E  0E05               	movlw	5
   496   000210  6E03               	movwf	___wmul@multiplicand^0,c
   497   000212  EC7B  F003         	call	___wmul	;wreg free
   498   000216  C001  F007         	movff	?___wmul,___awdiv@dividend
   499   00021A  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   500   00021E  0E00               	movlw	0
   501   000220  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   502   000222  0E02               	movlw	2
   503   000224  6E09               	movwf	___awdiv@divisor^0,c
   504   000226  EC4C  F002         	call	___awdiv	;wreg free
   505   00022A  C007  F019         	movff	?___awdiv,turn@ticks
   506   00022E  C008  F01A         	movff	?___awdiv+1,turn@ticks+1
   507   000232                     
   508                           ;general.c: 149:     int count = 0;
   509   000232  0E00               	movlw	0
   510   000234  6E1C               	movwf	(turn@count+1)^0,c
   511   000236  0E00               	movlw	0
   512   000238  6E1B               	movwf	turn@count^0,c
   513   00023A                     
   514                           ;general.c: 150:     if (dir == 1){
   515   00023A  040F               	decf	turn@dir^0,w,c
   516   00023C  1010               	iorwf	(turn@dir+1)^0,w,c
   517   00023E  A4D8               	btfss	status,2,c
   518   000240  EF24  F001         	goto	u491
   519   000244  EF26  F001         	goto	u490
   520   000248                     u491:
   521   000248  EF70  F001         	goto	l1092
   522   00024C                     u490:
   523   00024C                     
   524                           ;general.c: 151:         LATBbits.LATB0 = 1;
   525   00024C  808A               	bsf	138,0,c	;volatile
   526                           
   527                           ;general.c: 152:         LATBbits.LATB1 = 1;
   528   00024E  828A               	bsf	138,1,c	;volatile
   529                           
   530                           ;general.c: 153:         LATAbits.LATA4 = 0;
   531   000250  9889               	bcf	137,4,c	;volatile
   532                           
   533                           ;general.c: 154:         LATAbits.LATA5 = 1;
   534   000252  8A89               	bsf	137,5,c	;volatile
   535   000254                     
   536                           ;general.c: 156:         int temp = PORTCbits.RC0;
   537   000254  B082               	btfsc	130,0,c	;volatile
   538   000256  EF2F  F001         	goto	u501
   539   00025A  EF33  F001         	goto	u500
   540   00025E                     u501:
   541   00025E  6A13               	clrf	??_turn^0,c
   542   000260  2A13               	incf	??_turn^0,f,c
   543   000262  EF34  F001         	goto	u508
   544   000266                     u500:
   545   000266  6A13               	clrf	??_turn^0,c
   546   000268                     u508:
   547   000268  5013               	movf	??_turn^0,w,c
   548   00026A  6E15               	movwf	turn@temp^0,c
   549   00026C  6A16               	clrf	(turn@temp+1)^0,c
   550                           
   551                           ;general.c: 157:         while (count < ticks){
   552   00026E  EF5F  F001         	goto	l1090
   553   000272                     l1084:
   554                           
   555                           ;general.c: 158:             if (temp != PORTCbits.RC0){ count++; }
   556   000272  B082               	btfsc	130,0,c	;volatile
   557   000274  EF3E  F001         	goto	u511
   558   000278  EF41  F001         	goto	u510
   559   00027C                     u511:
   560   00027C  0E01               	movlw	1
   561   00027E  EF42  F001         	goto	u520
   562   000282                     u510:
   563   000282  0E00               	movlw	0
   564   000284                     u520:
   565   000284  6E13               	movwf	??_turn^0,c
   566   000286  6A14               	clrf	(??_turn+1)^0,c
   567   000288  5015               	movf	turn@temp^0,w,c
   568   00028A  1813               	xorwf	??_turn^0,w,c
   569   00028C  E109               	bnz	u530
   570   00028E  5016               	movf	(turn@temp+1)^0,w,c
   571   000290  1814               	xorwf	(??_turn+1)^0,w,c
   572   000292  B4D8               	btfsc	status,2,c
   573   000294  EF4E  F001         	goto	u531
   574   000298  EF50  F001         	goto	u530
   575   00029C                     u531:
   576   00029C  EF52  F001         	goto	l1088
   577   0002A0                     u530:
   578   0002A0  4A1B               	infsnz	turn@count^0,f,c
   579   0002A2  2A1C               	incf	(turn@count+1)^0,f,c
   580   0002A4                     l1088:
   581                           
   582                           ;general.c: 159:             temp = PORTCbits.RC0;
   583   0002A4  B082               	btfsc	130,0,c	;volatile
   584   0002A6  EF57  F001         	goto	u541
   585   0002AA  EF5B  F001         	goto	u540
   586   0002AE                     u541:
   587   0002AE  6A13               	clrf	??_turn^0,c
   588   0002B0  2A13               	incf	??_turn^0,f,c
   589   0002B2  EF5C  F001         	goto	u548
   590   0002B6                     u540:
   591   0002B6  6A13               	clrf	??_turn^0,c
   592   0002B8                     u548:
   593   0002B8  5013               	movf	??_turn^0,w,c
   594   0002BA  6E15               	movwf	turn@temp^0,c
   595   0002BC  6A16               	clrf	(turn@temp+1)^0,c
   596   0002BE                     l1090:
   597                           
   598                           ;general.c: 157:         while (count < ticks){
   599   0002BE  5019               	movf	turn@ticks^0,w,c
   600   0002C0  5C1B               	subwf	turn@count^0,w,c
   601   0002C2  501C               	movf	(turn@count+1)^0,w,c
   602   0002C4  0A80               	xorlw	128
   603   0002C6  6E13               	movwf	??_turn^0,c
   604   0002C8  501A               	movf	(turn@ticks+1)^0,w,c
   605   0002CA  0A80               	xorlw	128
   606   0002CC  5813               	subwfb	??_turn^0,w,c
   607   0002CE  A0D8               	btfss	status,0,c
   608   0002D0  EF6C  F001         	goto	u551
   609   0002D4  EF6E  F001         	goto	u550
   610   0002D8                     u551:
   611   0002D8  EF39  F001         	goto	l1084
   612   0002DC                     u550:
   613   0002DC  EFC2  F001         	goto	l108
   614   0002E0                     l1092:
   615   0002E0  280F               	incf	turn@dir^0,w,c
   616   0002E2  E106               	bnz	u561
   617   0002E4  2810               	incf	(turn@dir+1)^0,w,c
   618   0002E6  A4D8               	btfss	status,2,c
   619   0002E8  EF78  F001         	goto	u561
   620   0002EC  EF7A  F001         	goto	u560
   621   0002F0                     u561:
   622   0002F0  EFC2  F001         	goto	l108
   623   0002F4                     u560:
   624   0002F4                     
   625                           ;general.c: 163:         LATBbits.LATB0 = 0;
   626   0002F4  908A               	bcf	138,0,c	;volatile
   627                           
   628                           ;general.c: 164:         LATBbits.LATB1 = 1;
   629   0002F6  828A               	bsf	138,1,c	;volatile
   630                           
   631                           ;general.c: 165:         LATAbits.LATA4 = 1;
   632   0002F8  8889               	bsf	137,4,c	;volatile
   633                           
   634                           ;general.c: 166:         LATAbits.LATA5 = 1;
   635   0002FA  8A89               	bsf	137,5,c	;volatile
   636   0002FC                     
   637                           ;general.c: 168:         int temp = PORTCbits.RC5;
   638   0002FC  BA82               	btfsc	130,5,c	;volatile
   639   0002FE  EF83  F001         	goto	u571
   640   000302  EF87  F001         	goto	u570
   641   000306                     u571:
   642   000306  6A13               	clrf	??_turn^0,c
   643   000308  2A13               	incf	??_turn^0,f,c
   644   00030A  EF88  F001         	goto	u578
   645   00030E                     u570:
   646   00030E  6A13               	clrf	??_turn^0,c
   647   000310                     u578:
   648   000310  5013               	movf	??_turn^0,w,c
   649   000312  6E17               	movwf	turn@temp_459^0,c
   650   000314  6A18               	clrf	(turn@temp_459+1)^0,c
   651                           
   652                           ;general.c: 169:         while (count < ticks){
   653   000316  EFB3  F001         	goto	l1104
   654   00031A                     l1098:
   655                           
   656                           ;general.c: 170:             if (temp != PORTCbits.RC5){ count++; }
   657   00031A  BA82               	btfsc	130,5,c	;volatile
   658   00031C  EF92  F001         	goto	u581
   659   000320  EF95  F001         	goto	u580
   660   000324                     u581:
   661   000324  0E01               	movlw	1
   662   000326  EF96  F001         	goto	u590
   663   00032A                     u580:
   664   00032A  0E00               	movlw	0
   665   00032C                     u590:
   666   00032C  6E13               	movwf	??_turn^0,c
   667   00032E  6A14               	clrf	(??_turn+1)^0,c
   668   000330  5017               	movf	turn@temp_459^0,w,c
   669   000332  1813               	xorwf	??_turn^0,w,c
   670   000334  E109               	bnz	u600
   671   000336  5018               	movf	(turn@temp_459+1)^0,w,c
   672   000338  1814               	xorwf	(??_turn+1)^0,w,c
   673   00033A  B4D8               	btfsc	status,2,c
   674   00033C  EFA2  F001         	goto	u601
   675   000340  EFA4  F001         	goto	u600
   676   000344                     u601:
   677   000344  EFA6  F001         	goto	l1102
   678   000348                     u600:
   679   000348  4A1B               	infsnz	turn@count^0,f,c
   680   00034A  2A1C               	incf	(turn@count+1)^0,f,c
   681   00034C                     l1102:
   682                           
   683                           ;general.c: 171:             temp = PORTCbits.RC5;
   684   00034C  BA82               	btfsc	130,5,c	;volatile
   685   00034E  EFAB  F001         	goto	u611
   686   000352  EFAF  F001         	goto	u610
   687   000356                     u611:
   688   000356  6A13               	clrf	??_turn^0,c
   689   000358  2A13               	incf	??_turn^0,f,c
   690   00035A  EFB0  F001         	goto	u618
   691   00035E                     u610:
   692   00035E  6A13               	clrf	??_turn^0,c
   693   000360                     u618:
   694   000360  5013               	movf	??_turn^0,w,c
   695   000362  6E17               	movwf	turn@temp_459^0,c
   696   000364  6A18               	clrf	(turn@temp_459+1)^0,c
   697   000366                     l1104:
   698                           
   699                           ;general.c: 169:         while (count < ticks){
   700   000366  5019               	movf	turn@ticks^0,w,c
   701   000368  5C1B               	subwf	turn@count^0,w,c
   702   00036A  501C               	movf	(turn@count+1)^0,w,c
   703   00036C  0A80               	xorlw	128
   704   00036E  6E13               	movwf	??_turn^0,c
   705   000370  501A               	movf	(turn@ticks+1)^0,w,c
   706   000372  0A80               	xorlw	128
   707   000374  5813               	subwfb	??_turn^0,w,c
   708   000376  A0D8               	btfss	status,0,c
   709   000378  EFC0  F001         	goto	u621
   710   00037C  EFC2  F001         	goto	u620
   711   000380                     u621:
   712   000380  EF8D  F001         	goto	l1098
   713   000384                     u620:
   714   000384                     l108:
   715                           
   716                           ;general.c: 175:     LATBbits.LATB0 = 1;
   717   000384  808A               	bsf	138,0,c	;volatile
   718                           
   719                           ;general.c: 176:     LATBbits.LATB1 = 1;
   720   000386  828A               	bsf	138,1,c	;volatile
   721                           
   722                           ;general.c: 177:     LATAbits.LATA4 = 1;
   723   000388  8889               	bsf	137,4,c	;volatile
   724                           
   725                           ;general.c: 178:     LATAbits.LATA5 = 1;
   726   00038A  8A89               	bsf	137,5,c	;volatile
   727   00038C  0012               	return		;funcret
   728   00038E                     __end_of_turn:
   729                           	callstack 0
   730                           
   731 ;; *************** function ___wmul *****************
   732 ;; Defined at:
   733 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  multiplier      2    0[COMRAM] unsigned int 
   736 ;;  multiplicand    2    2[COMRAM] unsigned int 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  product         2    4[COMRAM] unsigned int 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  2    0[COMRAM] unsigned int 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, prodl, prodh
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1
   748 ;;      Params:         4       0       0
   749 ;;      Locals:         2       0       0
   750 ;;      Temps:          0       0       0
   751 ;;      Totals:         6       0       0
   752 ;;Total ram usage:        6 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_turn
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text2
   762   0006F6                     __ptext2:
   763                           	callstack 0
   764   0006F6                     ___wmul:
   765                           	callstack 29
   766   0006F6  5001               	movf	___wmul@multiplier^0,w,c
   767   0006F8  0203               	mulwf	___wmul@multiplicand^0,c
   768   0006FA  CFF3 F005          	movff	prodl,___wmul@product
   769   0006FE  CFF4 F006          	movff	prodh,___wmul@product+1
   770   000702  5001               	movf	___wmul@multiplier^0,w,c
   771   000704  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   772   000706  50F3               	movf	243,w,c
   773   000708  2606               	addwf	(___wmul@product+1)^0,f,c
   774   00070A  5002               	movf	(___wmul@multiplier+1)^0,w,c
   775   00070C  0203               	mulwf	___wmul@multiplicand^0,c
   776   00070E  50F3               	movf	243,w,c
   777   000710  2606               	addwf	(___wmul@product+1)^0,f,c
   778   000712  C005  F001         	movff	___wmul@product,?___wmul
   779   000716  C006  F002         	movff	___wmul@product+1,?___wmul+1
   780   00071A  0012               	return		;funcret
   781   00071C                     __end_of___wmul:
   782                           	callstack 0
   783                           
   784 ;; *************** function _readrightADC *****************
   785 ;; Defined at:
   786 ;;		line 188 in file "general.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2    0[COMRAM] unsigned int 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1
   800 ;;      Params:         2       0       0
   801 ;;      Locals:         0       0       0
   802 ;;      Temps:          2       0       0
   803 ;;      Totals:         4       0       0
   804 ;;Total ram usage:        4 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814   00071C                     __ptext3:
   815                           	callstack 0
   816   00071C                     _readrightADC:
   817                           	callstack 30
   818   00071C                     
   819                           ;general.c: 189:     ADCON0 = 0b00000111;
   820   00071C  0E07               	movlw	7
   821   00071E  6EC2               	movwf	194,c	;volatile
   822   000720                     l123:
   823   000720  B2C2               	btfsc	194,1,c	;volatile
   824   000722  EF95  F003         	goto	u451
   825   000726  EF97  F003         	goto	u450
   826   00072A                     u451:
   827   00072A  EF90  F003         	goto	l123
   828   00072E                     u450:
   829   00072E                     
   830                           ;general.c: 191:     return ((ADRESH << 8) + ADRESL);
   831   00072E  50C4               	movf	196,w,c	;volatile
   832   000730  6E04               	movwf	(??_readrightADC+1)^0,c
   833   000732  6A03               	clrf	??_readrightADC^0,c
   834   000734  50C3               	movf	195,w,c	;volatile
   835   000736  2403               	addwf	??_readrightADC^0,w,c
   836   000738  6E01               	movwf	?_readrightADC^0,c
   837   00073A  0E00               	movlw	0
   838   00073C  2004               	addwfc	(??_readrightADC+1)^0,w,c
   839   00073E  6E02               	movwf	(?_readrightADC+1)^0,c
   840   000740  0012               	return		;funcret
   841   000742                     __end_of_readrightADC:
   842                           	callstack 0
   843                           
   844 ;; *************** function _readleftADC *****************
   845 ;; Defined at:
   846 ;;		line 182 in file "general.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2    0[COMRAM] unsigned int 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1
   860 ;;      Params:         2       0       0
   861 ;;      Locals:         0       0       0
   862 ;;      Temps:          2       0       0
   863 ;;      Totals:         4       0       0
   864 ;;Total ram usage:        4 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874   000742                     __ptext4:
   875                           	callstack 0
   876   000742                     _readleftADC:
   877                           	callstack 30
   878   000742                     
   879                           ;general.c: 183:     ADCON0 = 0b00000011;
   880   000742  0E03               	movlw	3
   881   000744  6EC2               	movwf	194,c	;volatile
   882   000746                     l117:
   883   000746  B2C2               	btfsc	194,1,c	;volatile
   884   000748  EFA8  F003         	goto	u441
   885   00074C  EFAA  F003         	goto	u440
   886   000750                     u441:
   887   000750  EFA3  F003         	goto	l117
   888   000754                     u440:
   889   000754                     
   890                           ;general.c: 185:     return ((ADRESH << 8) + ADRESL);
   891   000754  50C4               	movf	196,w,c	;volatile
   892   000756  6E04               	movwf	(??_readleftADC+1)^0,c
   893   000758  6A03               	clrf	??_readleftADC^0,c
   894   00075A  50C3               	movf	195,w,c	;volatile
   895   00075C  2403               	addwf	??_readleftADC^0,w,c
   896   00075E  6E01               	movwf	?_readleftADC^0,c
   897   000760  0E00               	movlw	0
   898   000762  2004               	addwfc	(??_readleftADC+1)^0,w,c
   899   000764  6E02               	movwf	(?_readleftADC+1)^0,c
   900   000766  0012               	return		;funcret
   901   000768                     __end_of_readleftADC:
   902                           	callstack 0
   903                           
   904 ;; *************** function _flashLEDs *****************
   905 ;; Defined at:
   906 ;;		line 117 in file "general.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  dur             2   19[COMRAM] int 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  i               2   21[COMRAM] int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1
   920 ;;      Params:         2       0       0
   921 ;;      Locals:         2       0       0
   922 ;;      Temps:          0       0       0
   923 ;;      Totals:         4       0       0
   924 ;;Total ram usage:        4 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 1
   927 ;; This function calls:
   928 ;;		___awdiv
   929 ;;		_wait10ms
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text5
   936   00055C                     __ptext5:
   937                           	callstack 0
   938   00055C                     _flashLEDs:
   939                           	callstack 29
   940   00055C                     
   941                           ;general.c: 118:     for(int i=0;i<3;i++){
   942   00055C  0E00               	movlw	0
   943   00055E  6E17               	movwf	(flashLEDs@i+1)^0,c
   944   000560  0E00               	movlw	0
   945   000562  6E16               	movwf	flashLEDs@i^0,c
   946   000564                     l87:
   947                           
   948                           ;general.c: 119:         LATBbits.LATB2=1; LATBbits.LATB3=1; LATBbits.LATB4=1; LATBbits.
      +                          LATB5=1;
   949   000564  848A               	bsf	138,2,c	;volatile
   950   000566  868A               	bsf	138,3,c	;volatile
   951   000568  888A               	bsf	138,4,c	;volatile
   952   00056A  8A8A               	bsf	138,5,c	;volatile
   953   00056C                     
   954                           ;general.c: 120:         wait10ms(dur/6);
   955   00056C  C014  F007         	movff	flashLEDs@dur,___awdiv@dividend
   956   000570  C015  F008         	movff	flashLEDs@dur+1,___awdiv@dividend+1
   957   000574  0E00               	movlw	0
   958   000576  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   959   000578  0E06               	movlw	6
   960   00057A  6E09               	movwf	___awdiv@divisor^0,c
   961   00057C  EC4C  F002         	call	___awdiv	;wreg free
   962   000580  C007  F00F         	movff	?___awdiv,wait10ms@del
   963   000584  C008  F010         	movff	?___awdiv+1,wait10ms@del+1
   964   000588  EC5B  F003         	call	_wait10ms	;wreg free
   965   00058C                     
   966                           ;general.c: 121:         LATBbits.LATB2=0; LATBbits.LATB3=0; LATBbits.LATB4=0; LATBbits.
      +                          LATB5=0;
   967   00058C  948A               	bcf	138,2,c	;volatile
   968   00058E  968A               	bcf	138,3,c	;volatile
   969   000590  988A               	bcf	138,4,c	;volatile
   970   000592  9A8A               	bcf	138,5,c	;volatile
   971                           
   972                           ;general.c: 122:         wait10ms(dur/6);
   973   000594  C014  F007         	movff	flashLEDs@dur,___awdiv@dividend
   974   000598  C015  F008         	movff	flashLEDs@dur+1,___awdiv@dividend+1
   975   00059C  0E00               	movlw	0
   976   00059E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   977   0005A0  0E06               	movlw	6
   978   0005A2  6E09               	movwf	___awdiv@divisor^0,c
   979   0005A4  EC4C  F002         	call	___awdiv	;wreg free
   980   0005A8  C007  F00F         	movff	?___awdiv,wait10ms@del
   981   0005AC  C008  F010         	movff	?___awdiv+1,wait10ms@del+1
   982   0005B0  EC5B  F003         	call	_wait10ms	;wreg free
   983   0005B4                     
   984                           ;general.c: 123:     }
   985   0005B4  4A16               	infsnz	flashLEDs@i^0,f,c
   986   0005B6  2A17               	incf	(flashLEDs@i+1)^0,f,c
   987   0005B8  BE17               	btfsc	(flashLEDs@i+1)^0,7,c
   988   0005BA  EFE8  F002         	goto	u431
   989   0005BE  5017               	movf	(flashLEDs@i+1)^0,w,c
   990   0005C0  E109               	bnz	u430
   991   0005C2  0E03               	movlw	3
   992   0005C4  5C16               	subwf	flashLEDs@i^0,w,c
   993   0005C6  A0D8               	btfss	status,0,c
   994   0005C8  EFE8  F002         	goto	u431
   995   0005CC  EFEA  F002         	goto	u430
   996   0005D0                     u431:
   997   0005D0  EFB2  F002         	goto	l87
   998   0005D4                     u430:
   999   0005D4  0012               	return		;funcret
  1000   0005D6                     __end_of_flashLEDs:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function ___awdiv *****************
  1004 ;; Defined at:
  1005 ;;		line 7 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  dividend        2    6[COMRAM] int 
  1008 ;;  divisor         2    8[COMRAM] int 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  quotient        2   12[COMRAM] int 
  1011 ;;  sign            1   11[COMRAM] unsigned char 
  1012 ;;  counter         1   10[COMRAM] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    6[COMRAM] int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1
  1022 ;;      Params:         4       0       0
  1023 ;;      Locals:         4       0       0
  1024 ;;      Temps:          0       0       0
  1025 ;;      Totals:         8       0       0
  1026 ;;Total ram usage:        8 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_flashLEDs
  1032 ;;		_turn
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text6
  1037   000498                     __ptext6:
  1038                           	callstack 0
  1039   000498                     ___awdiv:
  1040                           	callstack 29
  1041   000498  0E00               	movlw	0
  1042   00049A  6E0C               	movwf	___awdiv@sign^0,c
  1043   00049C  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1044   00049E  EF55  F002         	goto	u370
  1045   0004A2  EF53  F002         	goto	u371
  1046   0004A6                     u371:
  1047   0004A6  EF5B  F002         	goto	l990
  1048   0004AA                     u370:
  1049   0004AA  6C09               	negf	___awdiv@divisor^0,c
  1050   0004AC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1051   0004AE  B0D8               	btfsc	status,0,c
  1052   0004B0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1053   0004B2  0E01               	movlw	1
  1054   0004B4  6E0C               	movwf	___awdiv@sign^0,c
  1055   0004B6                     l990:
  1056   0004B6  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1057   0004B8  EF62  F002         	goto	u380
  1058   0004BC  EF60  F002         	goto	u381
  1059   0004C0                     u381:
  1060   0004C0  EF68  F002         	goto	l996
  1061   0004C4                     u380:
  1062   0004C4  6C07               	negf	___awdiv@dividend^0,c
  1063   0004C6  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1064   0004C8  B0D8               	btfsc	status,0,c
  1065   0004CA  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1066   0004CC  0E01               	movlw	1
  1067   0004CE  1A0C               	xorwf	___awdiv@sign^0,f,c
  1068   0004D0                     l996:
  1069   0004D0  0E00               	movlw	0
  1070   0004D2  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1071   0004D4  0E00               	movlw	0
  1072   0004D6  6E0D               	movwf	___awdiv@quotient^0,c
  1073   0004D8  5009               	movf	___awdiv@divisor^0,w,c
  1074   0004DA  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1075   0004DC  B4D8               	btfsc	status,2,c
  1076   0004DE  EF73  F002         	goto	u391
  1077   0004E2  EF75  F002         	goto	u390
  1078   0004E6                     u391:
  1079   0004E6  EF9D  F002         	goto	l1018
  1080   0004EA                     u390:
  1081   0004EA  0E01               	movlw	1
  1082   0004EC  6E0B               	movwf	___awdiv@counter^0,c
  1083   0004EE  EF7D  F002         	goto	l1004
  1084   0004F2                     l1002:
  1085   0004F2  90D8               	bcf	status,0,c
  1086   0004F4  3609               	rlcf	___awdiv@divisor^0,f,c
  1087   0004F6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1088   0004F8  2A0B               	incf	___awdiv@counter^0,f,c
  1089   0004FA                     l1004:
  1090   0004FA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1091   0004FC  EF82  F002         	goto	u401
  1092   000500  EF84  F002         	goto	u400
  1093   000504                     u401:
  1094   000504  EF79  F002         	goto	l1002
  1095   000508                     u400:
  1096   000508                     l1006:
  1097   000508  90D8               	bcf	status,0,c
  1098   00050A  360D               	rlcf	___awdiv@quotient^0,f,c
  1099   00050C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1100   00050E  5009               	movf	___awdiv@divisor^0,w,c
  1101   000510  5C07               	subwf	___awdiv@dividend^0,w,c
  1102   000512  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1103   000514  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1104   000516  A0D8               	btfss	status,0,c
  1105   000518  EF90  F002         	goto	u411
  1106   00051C  EF92  F002         	goto	u410
  1107   000520                     u411:
  1108   000520  EF97  F002         	goto	l1014
  1109   000524                     u410:
  1110   000524  5009               	movf	___awdiv@divisor^0,w,c
  1111   000526  5E07               	subwf	___awdiv@dividend^0,f,c
  1112   000528  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1113   00052A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1114   00052C  800D               	bsf	___awdiv@quotient^0,0,c
  1115   00052E                     l1014:
  1116   00052E  90D8               	bcf	status,0,c
  1117   000530  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1118   000532  3209               	rrcf	___awdiv@divisor^0,f,c
  1119   000534  2E0B               	decfsz	___awdiv@counter^0,f,c
  1120   000536  EF84  F002         	goto	l1006
  1121   00053A                     l1018:
  1122   00053A  500C               	movf	___awdiv@sign^0,w,c
  1123   00053C  B4D8               	btfsc	status,2,c
  1124   00053E  EFA3  F002         	goto	u421
  1125   000542  EFA5  F002         	goto	u420
  1126   000546                     u421:
  1127   000546  EFA9  F002         	goto	l1022
  1128   00054A                     u420:
  1129   00054A  6C0D               	negf	___awdiv@quotient^0,c
  1130   00054C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1131   00054E  B0D8               	btfsc	status,0,c
  1132   000550  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1133   000552                     l1022:
  1134   000552  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1135   000556  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1136   00055A  0012               	return		;funcret
  1137   00055C                     __end_of___awdiv:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _facebeacon *****************
  1141 ;; Defined at:
  1142 ;;		line 126 in file "general.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		None
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1
  1156 ;;      Params:         0       0       0
  1157 ;;      Locals:         0       0       0
  1158 ;;      Temps:          0       0       0
  1159 ;;      Totals:         0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text7
  1170   0005D6                     __ptext7:
  1171                           	callstack 0
  1172   0005D6                     _facebeacon:
  1173                           	callstack 30
  1174   0005D6                     l878:
  1175   0005D6  EF19  F003         	goto	l92
  1176   0005DA                     l93:
  1177                           
  1178                           ;general.c: 128:         if(PORTAbits.RA2 == 0){
  1179   0005DA  B480               	btfsc	128,2,c	;volatile
  1180   0005DC  EFF2  F002         	goto	u91
  1181   0005E0  EFF4  F002         	goto	u90
  1182   0005E4                     u91:
  1183   0005E4  EFFA  F002         	goto	l94
  1184   0005E8                     u90:
  1185   0005E8                     
  1186                           ;general.c: 129:             LATBbits.LATB0 = 0;
  1187   0005E8  908A               	bcf	138,0,c	;volatile
  1188                           
  1189                           ;general.c: 130:             LATBbits.LATB1 = 1;
  1190   0005EA  828A               	bsf	138,1,c	;volatile
  1191                           
  1192                           ;general.c: 131:             LATAbits.LATA4 = 1;
  1193   0005EC  8889               	bsf	137,4,c	;volatile
  1194                           
  1195                           ;general.c: 132:             LATAbits.LATA5 = 1;
  1196   0005EE  8A89               	bsf	137,5,c	;volatile
  1197                           
  1198                           ;general.c: 133:         }else if(PORTAbits.RA3 == 0){
  1199   0005F0  EF19  F003         	goto	l92
  1200   0005F4                     l94:
  1201   0005F4  B680               	btfsc	128,3,c	;volatile
  1202   0005F6  EFFF  F002         	goto	u101
  1203   0005FA  EF01  F003         	goto	u100
  1204   0005FE                     u101:
  1205   0005FE  EF07  F003         	goto	l96
  1206   000602                     u100:
  1207   000602                     
  1208                           ;general.c: 134:             LATBbits.LATB0 = 1;
  1209   000602  808A               	bsf	138,0,c	;volatile
  1210                           
  1211                           ;general.c: 135:             LATBbits.LATB1 = 1;
  1212   000604  828A               	bsf	138,1,c	;volatile
  1213                           
  1214                           ;general.c: 136:             LATAbits.LATA4 = 0;
  1215   000606  9889               	bcf	137,4,c	;volatile
  1216                           
  1217                           ;general.c: 137:             LATAbits.LATA5 = 1;
  1218   000608  8A89               	bsf	137,5,c	;volatile
  1219                           
  1220                           ;general.c: 138:         }else if(PORTAbits.RA3 == 1 && PORTAbits.RA2 == 1){
  1221   00060A  EFEB  F002         	goto	l878
  1222   00060E                     l96:
  1223   00060E  A680               	btfss	128,3,c	;volatile
  1224   000610  EF0C  F003         	goto	u111
  1225   000614  EF0E  F003         	goto	u110
  1226   000618                     u111:
  1227   000618  EFEB  F002         	goto	l878
  1228   00061C                     u110:
  1229   00061C  A480               	btfss	128,2,c	;volatile
  1230   00061E  EF13  F003         	goto	u121
  1231   000622  EF15  F003         	goto	u120
  1232   000626                     u121:
  1233   000626  EFEB  F002         	goto	l878
  1234   00062A                     u120:
  1235   00062A                     
  1236                           ;general.c: 139:             LATBbits.LATB0 = 1;
  1237   00062A  808A               	bsf	138,0,c	;volatile
  1238                           
  1239                           ;general.c: 140:             LATBbits.LATB1 = 1;
  1240   00062C  828A               	bsf	138,1,c	;volatile
  1241                           
  1242                           ;general.c: 141:             LATAbits.LATA4 = 0;
  1243   00062E  9889               	bcf	137,4,c	;volatile
  1244                           
  1245                           ;general.c: 142:             LATAbits.LATA5 = 1;
  1246   000630  8A89               	bsf	137,5,c	;volatile
  1247   000632                     l92:
  1248                           
  1249                           ;general.c: 127: { while(PORTAbits.RA2 == 1 || PORTAbits.RA3 == 1){
  1250   000632  B480               	btfsc	128,2,c	;volatile
  1251   000634  EF1E  F003         	goto	u131
  1252   000638  EF20  F003         	goto	u130
  1253   00063C                     u131:
  1254   00063C  EFED  F002         	goto	l93
  1255   000640                     u130:
  1256   000640  B680               	btfsc	128,3,c	;volatile
  1257   000642  EF25  F003         	goto	u141
  1258   000646  EF27  F003         	goto	u140
  1259   00064A                     u141:
  1260   00064A  EFED  F002         	goto	l93
  1261   00064E                     u140:
  1262   00064E  0012               	return		;funcret
  1263   000650                     __end_of_facebeacon:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _acc *****************
  1267 ;; Defined at:
  1268 ;;		line 92 in file "general.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  dir             2   19[COMRAM] int 
  1271 ;;  dur             2   21[COMRAM] int 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1
  1283 ;;      Params:         4       0       0
  1284 ;;      Locals:         0       0       0
  1285 ;;      Temps:          0       0       0
  1286 ;;      Totals:         4       0       0
  1287 ;;Total ram usage:        4 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 1
  1290 ;; This function calls:
  1291 ;;		_wait10ms
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text8
  1298   000650                     __ptext8:
  1299                           	callstack 0
  1300   000650                     _acc:
  1301                           	callstack 29
  1302   000650                     
  1303                           ;general.c: 92: void acc(int dir, int dur);general.c: 93: {;general.c: 94:     if(dir ==
      +                           1){
  1304   000650  0414               	decf	acc@dir^0,w,c
  1305   000652  1015               	iorwf	(acc@dir+1)^0,w,c
  1306   000654  A4D8               	btfss	status,2,c
  1307   000656  EF2F  F003         	goto	u461
  1308   00065A  EF31  F003         	goto	u460
  1309   00065E                     u461:
  1310   00065E  EF37  F003         	goto	l1062
  1311   000662                     u460:
  1312   000662                     
  1313                           ;general.c: 95:         LATBbits.LATB0 = 0;
  1314   000662  908A               	bcf	138,0,c	;volatile
  1315                           
  1316                           ;general.c: 96:         LATBbits.LATB1 = 1;
  1317   000664  828A               	bsf	138,1,c	;volatile
  1318                           
  1319                           ;general.c: 97:         LATAbits.LATA4 = 0;
  1320   000666  9889               	bcf	137,4,c	;volatile
  1321                           
  1322                           ;general.c: 98:         LATAbits.LATA5 = 1;
  1323   000668  8A89               	bsf	137,5,c	;volatile
  1324                           
  1325                           ;general.c: 99:     }
  1326   00066A  EF54  F003         	goto	l1070
  1327   00066E                     l1062:
  1328   00066E  2814               	incf	acc@dir^0,w,c
  1329   000670  E106               	bnz	u471
  1330   000672  2815               	incf	(acc@dir+1)^0,w,c
  1331   000674  A4D8               	btfss	status,2,c
  1332   000676  EF3F  F003         	goto	u471
  1333   00067A  EF41  F003         	goto	u470
  1334   00067E                     u471:
  1335   00067E  EF47  F003         	goto	l1066
  1336   000682                     u470:
  1337   000682                     
  1338                           ;general.c: 101:         LATBbits.LATB0 = 1;
  1339   000682  808A               	bsf	138,0,c	;volatile
  1340                           
  1341                           ;general.c: 102:         LATBbits.LATB1 = 0;
  1342   000684  928A               	bcf	138,1,c	;volatile
  1343                           
  1344                           ;general.c: 103:         LATAbits.LATA4 = 1;
  1345   000686  8889               	bsf	137,4,c	;volatile
  1346                           
  1347                           ;general.c: 104:         LATAbits.LATA5 = 0;
  1348   000688  9A89               	bcf	137,5,c	;volatile
  1349                           
  1350                           ;general.c: 105:     }
  1351   00068A  EF54  F003         	goto	l1070
  1352   00068E                     l1066:
  1353   00068E  5014               	movf	acc@dir^0,w,c
  1354   000690  1015               	iorwf	(acc@dir+1)^0,w,c
  1355   000692  A4D8               	btfss	status,2,c
  1356   000694  EF4E  F003         	goto	u481
  1357   000698  EF50  F003         	goto	u480
  1358   00069C                     u481:
  1359   00069C  EF54  F003         	goto	l1070
  1360   0006A0                     u480:
  1361   0006A0                     
  1362                           ;general.c: 107:     {;general.c: 108:         LATBbits.LATB0 = 1;
  1363   0006A0  808A               	bsf	138,0,c	;volatile
  1364                           
  1365                           ;general.c: 109:         LATBbits.LATB1 = 1;
  1366   0006A2  828A               	bsf	138,1,c	;volatile
  1367                           
  1368                           ;general.c: 110:         LATAbits.LATA4 = 1;
  1369   0006A4  8889               	bsf	137,4,c	;volatile
  1370                           
  1371                           ;general.c: 111:         LATAbits.LATA5 = 1;
  1372   0006A6  8A89               	bsf	137,5,c	;volatile
  1373   0006A8                     l1070:
  1374                           
  1375                           ;general.c: 113:     wait10ms(dur);
  1376   0006A8  C016  F00F         	movff	acc@dur,wait10ms@del
  1377   0006AC  C017  F010         	movff	acc@dur+1,wait10ms@del+1
  1378   0006B0  EC5B  F003         	call	_wait10ms	;wreg free
  1379   0006B4  0012               	return		;funcret
  1380   0006B6                     __end_of_acc:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _wait10ms *****************
  1384 ;; Defined at:
  1385 ;;		line 85 in file "general.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  del             2   14[COMRAM] int 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  c               2   17[COMRAM] int 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1
  1399 ;;      Params:         2       0       0
  1400 ;;      Locals:         2       0       0
  1401 ;;      Temps:          1       0       0
  1402 ;;      Totals:         5       0       0
  1403 ;;Total ram usage:        5 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;;		_acc
  1410 ;;		_flashLEDs
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text9
  1415   0006B6                     __ptext9:
  1416                           	callstack 0
  1417   0006B6                     _wait10ms:
  1418                           	callstack 30
  1419   0006B6                     
  1420                           ;general.c: 86:  int c;;general.c: 87:  for(c=0;c<del;c++)
  1421   0006B6  0E00               	movlw	0
  1422   0006B8  6E13               	movwf	(wait10ms@c+1)^0,c
  1423   0006BA  0E00               	movlw	0
  1424   0006BC  6E12               	movwf	wait10ms@c^0,c
  1425   0006BE  EF6B  F003         	goto	l73
  1426   0006C2                     l972:
  1427                           
  1428                           ;general.c: 88:      _delay((unsigned long)((10)*(10000000/4000.0)));
  1429   0006C2  0E21               	movlw	33
  1430   0006C4  6E11               	movwf	??_wait10ms^0,c
  1431   0006C6  0E76               	movlw	118
  1432   0006C8                     u657:
  1433   0006C8  2EE8               	decfsz	wreg,f,c
  1434   0006CA  D7FE               	bra	u657
  1435   0006CC  2E11               	decfsz	??_wait10ms^0,f,c
  1436   0006CE  D7FC               	bra	u657
  1437   0006D0  D000               	nop2	
  1438   0006D2  4A12               	infsnz	wait10ms@c^0,f,c
  1439   0006D4  2A13               	incf	(wait10ms@c+1)^0,f,c
  1440   0006D6                     l73:
  1441   0006D6  500F               	movf	wait10ms@del^0,w,c
  1442   0006D8  5C12               	subwf	wait10ms@c^0,w,c
  1443   0006DA  5013               	movf	(wait10ms@c+1)^0,w,c
  1444   0006DC  0A80               	xorlw	128
  1445   0006DE  6E11               	movwf	??_wait10ms^0,c
  1446   0006E0  5010               	movf	(wait10ms@del+1)^0,w,c
  1447   0006E2  0A80               	xorlw	128
  1448   0006E4  5811               	subwfb	??_wait10ms^0,w,c
  1449   0006E6  A0D8               	btfss	status,0,c
  1450   0006E8  EF78  F003         	goto	u361
  1451   0006EC  EF7A  F003         	goto	u360
  1452   0006F0                     u361:
  1453   0006F0  EF61  F003         	goto	l972
  1454   0006F4                     u360:
  1455   0006F4  0012               	return		;funcret
  1456   0006F6                     __end_of_wait10ms:
  1457                           	callstack 0
  1458                           
  1459                           	psect	smallconst
  1460   000200                     __psmallconst:
  1461                           	callstack 0
  1462   000200  00                 	db	0
  1463   000201  00                 	db	0	; dummy byte at the end
  1464   000000                     
  1465                           	psect	rparam
  1466   000000                     
  1467                           	psect	config
  1468                           
  1469                           ; Padding undefined space
  1470   300000                     	org	3145728
  1471   300000  FF                 	db	255
  1472                           
  1473                           ;Config register CONFIG1H @ 0x300001
  1474                           ;	Oscillator
  1475                           ;	OSC = HS, HS Oscillator
  1476                           ;	Fail-Safe Clock Monitor Enable bit
  1477                           ;	FCMEN = 0x0, unprogrammed default
  1478                           ;	Internal/External Oscillator Switchover bit
  1479                           ;	IESO = 0x0, unprogrammed default
  1480   300001                     	org	3145729
  1481   300001  02                 	db	2
  1482                           
  1483                           ;Config register CONFIG2L @ 0x300002
  1484                           ;	Power-up Timer Enable bit
  1485                           ;	PWRT = ON, PWRT enabled
  1486                           ;	Brown-out Reset Enable bits
  1487                           ;	BOR = 0x3, unprogrammed default
  1488                           ;	Brown-out Reset Voltage bits
  1489                           ;	BORV = 0x3, unprogrammed default
  1490   300002                     	org	3145730
  1491   300002  1E                 	db	30
  1492                           
  1493                           ;Config register CONFIG2H @ 0x300003
  1494                           ;	Watchdog Timer Enable bit
  1495                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1496                           ;	Watchdog Timer Postscale Select bits
  1497                           ;	WDTPS = 0xF, unprogrammed default
  1498   300003                     	org	3145731
  1499   300003  1E                 	db	30
  1500                           
  1501                           ;Config register CONFIG4L @ 0x300006
  1502                           ;	Stack Full/Underflow Reset Enable bit
  1503                           ;	STVREN = 0x1, unprogrammed default
  1504                           ;	Single-Supply ICSP Enable bit
  1505                           ;	LVP = OFF, Single-Supply ICSP disabled
  1506                           ;	Boot Block Size Select bits
  1507                           ;	BBSIZ = 0x0, unprogrammed default
  1508                           ;	Extended Instruction Set Enable bit
  1509                           ;	XINST = 0x0, unprogrammed default
  1510                           ;	Background Debugger Enable bit
  1511                           ;	DEBUG = 0x1, unprogrammed default
  1512   300006                     	org	3145734
  1513   300006  81                 	db	129
  1514                           
  1515                           ; Padding undefined space
  1516   300007                     	org	3145735
  1517   300007  FF                 	db	255
  1518                           tosu	equ	0xFFF
  1519                           tosh	equ	0xFFE
  1520                           tosl	equ	0xFFD
  1521                           stkptr	equ	0xFFC
  1522                           pclatu	equ	0xFFB
  1523                           pclath	equ	0xFFA
  1524                           pcl	equ	0xFF9
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodh	equ	0xFF4
  1530                           prodl	equ	0xFF3
  1531                           indf0	equ	0xFEF
  1532                           postinc0	equ	0xFEE
  1533                           postdec0	equ	0xFED
  1534                           preinc0	equ	0xFEC
  1535                           plusw0	equ	0xFEB
  1536                           fsr0h	equ	0xFEA
  1537                           fsr0l	equ	0xFE9
  1538                           wreg	equ	0xFE8
  1539                           indf1	equ	0xFE7
  1540                           postinc1	equ	0xFE6
  1541                           postdec1	equ	0xFE5
  1542                           preinc1	equ	0xFE4
  1543                           plusw1	equ	0xFE3
  1544                           fsr1h	equ	0xFE2
  1545                           fsr1l	equ	0xFE1
  1546                           bsr	equ	0xFE0
  1547                           indf2	equ	0xFDF
  1548                           postinc2	equ	0xFDE
  1549                           postdec2	equ	0xFDD
  1550                           preinc2	equ	0xFDC
  1551                           plusw2	equ	0xFDB
  1552                           fsr2h	equ	0xFDA
  1553                           fsr2l	equ	0xFD9
  1554                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      30
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_turn
    _turn->___awdiv
    _flashLEDs->_wait10ms
    ___awdiv->___wmul
    _acc->_wait10ms
    _wait10ms->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4321
                                _acc
                         _facebeacon
                          _flashLEDs
                        _readleftADC
                       _readrightADC
                               _turn
                           _wait10ms
 ---------------------------------------------------------------------------------
 (1) _turn                                                14    10      4    1577
                                             14 COMRAM    14    10      4
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _readrightADC                                         4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readleftADC                                          4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _flashLEDs                                            4     2      2    1348
                                             19 COMRAM     4     2      2
                            ___awdiv
                           _wait10ms
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _facebeacon                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _acc                                                  4     0      4    1046
                                             19 COMRAM     4     0      4
                           _wait10ms
 ---------------------------------------------------------------------------------
 (1) _wait10ms                                             5     3      2     350
                                             14 COMRAM     5     3      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _acc
     _wait10ms
       ___awdiv (ARG)
         ___wmul (ARG)
   _facebeacon
   _flashLEDs
     ___awdiv
     _wait10ms
   _readleftADC
   _readrightADC
   _turn
     ___awdiv
     ___wmul
   _wait10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      1E       1       23.6%
BITBIGSFRhh         34      0       0       8        0.0%
BITBIGSFRhlll       25      0       0      12        0.0%
BITBIGSFRllh         7      0       0      13        0.0%
BITBIGSFRlllh        6      0       0      14        0.0%
BITBIGSFRhlhhh       5      0       0       9        0.0%
BITBIGSFRhllh        1      0       0      11        0.0%
BITBIGSFRhlhl        1      0       0      10        0.0%
BITBIGSFRllll        1      0       0      15        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      16        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec  6 12:44:06 2023

                     l73 06D6                       l76 06F4                       l84 06B4  
                     l92 0632                       l93 05DA                       l94 05F4  
                     l87 0564                       l96 060E                       l89 05D4  
                     u90 05E8                       u91 05E4             ___awdiv@sign 000C  
    ___wmul@multiplicand 0003                      l100 064E                      l120 0766  
                    l114 038C                      l123 0720                      l108 0384  
                    l117 0746                      l126 0740                      l129 071A  
                    l360 055A                      l880 05E8                      l970 06B6  
                    l882 0602                      l972 06C2                      l884 061C  
                    l974 06D2                      l886 062A                      l878 05D6  
                    l990 04B6                      l982 0498                      l888 0640  
                    l992 04C4                      l984 049C                      l976 06F6  
                    l994 04CC                      l986 04AA                      l978 0712  
                    l996 04D0                      l988 04B2                      l998 04D8  
                    u100 0602                      u101 05FE                      u110 061C  
                    u111 0618                      u120 062A                      u121 0626  
                    u130 0640                      u131 063C                      u140 064E  
                    u141 064A                      u400 0508                      u401 0504  
                    u410 0524                      u411 0520                      u420 054A  
                    u500 0266                      u421 0546                      u501 025E  
                    u430 05D4                      u510 0282                      _PR2 0FCB  
                    u431 05D0                      u511 027C                      u360 06F4  
                    u440 0754                      u600 0348                      u520 0284  
                    u361 06F0                      u441 0750                      u601 0344  
                    u370 04AA                      u450 072E                      u610 035E  
                    u530 02A0                      u371 04A6                      u451 072A  
                    u611 0356                      u531 029C                      u460 0662  
                    u380 04C4                      u620 0384                      u540 02B6  
                    u508 0268                      u461 065E                      u381 04C0  
                    u621 0380                      u541 02AE                      u470 0682  
                    u390 04EA                      u550 02DC                      u630 03E6  
                    u471 067E                      u391 04E6                      u551 02D8  
                    u631 03E2                      u480 06A0                      u560 02F4  
                    u640 0400                      u481 069C                      u561 02F0  
                    u641 03FC                      u618 0360                      u570 030E  
                    u490 024C                      u571 0306                      u491 0248  
                    u580 032A                      u548 02B8                      u581 0324  
                    u590 032C                      u657 06C8                      u578 0310  
                    _acc 0650                      wreg 0FE8                     ?_acc 0014  
                   l1000 04EA                     l1010 0524                     l1002 04F2  
                   l1020 054A                     l1012 052C                     l1004 04FA  
                   l1100 0348                     l1022 0552                     l1014 052E  
                   l1006 0508                     l1102 034C                     l1110 03BC  
                   l1016 0534                     l1008 050E                     l1040 0592  
                   l1032 056C                     l1104 0366                     l1120 043E  
                   l1112 03C8                     l1018 053A                     l1042 05B4  
                   l1034 058C                     l1026 055C                     l1122 0450  
                   l1114 03CC                     l1106 038E                     l1060 0662  
                   l1044 05B8                     l1036 058E                     l1052 071C  
                   l1124 047C                     l1116 03E6                     l1108 039A  
                   l1070 06A8                     l1062 066E                     l1038 0590  
                   l1046 0742                     l1054 072E                     l1118 0400  
                   l1064 0682                     l1048 0754                     l1080 024C  
                   l1066 068E                     l1058 0650                     l1090 02BE  
                   l1082 0254                     l1074 0202                     l1068 06A0  
                   l1084 0272                     l1092 02E0                     l1076 0232  
                   l1094 02F4                     l1086 02A0                     l1078 023A  
                   l1096 02FC                     l1088 02A4                     l1098 031A  
                   _LATB 0F8A                     _main 038E                     _turn 0202  
                   prodh 0FF4                     prodl 0FF3                     start 0000  
           ___param_bank 0000                    ??_acc 0018                    ?_main 0001  
        __end_of___awdiv 055C                    ?_turn 000F          ___awdiv@divisor 0009  
                  _T2CON 0FCA          ___awdiv@counter 000B                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94             ?_readleftADC 0001  
                  tablat 0FF5                    status 0FD8          __initialization 0768  
           __end_of_main 0498             __end_of_turn 038E                   ??_main 001D  
                 ??_turn 0013            __activetblptr 0000                   _ADCON0 0FC2  
                 _ADCON1 0FC1                   _ADCON2 0FC0                   _ADRESH 0FC4  
                 _ADRESL 0FC3                   _CCPR1L 0FBE                   _CCPR2L 0FBB  
       ___awdiv@dividend 0007                   acc@dir 0014                   acc@dur 0016  
                 ___wmul 06F6                ??___awdiv 000B         ___awdiv@quotient 000D  
                 isa$std 0001         __end_of_wait10ms 06F6             __pdataCOMRAM 001D  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8            ?_readrightADC 0001               __accesstop 0080  
__end_of__initialization 0780            ___rparam_used 0001           __pcstackCOMRAM 0001  
         ??_readrightADC 0003               _facebeacon 05D6              wait10ms@del 000F  
                ?___wmul 0001                  _CCP1CON 0FBD                  _CCP2CON 0FBA  
              ?_wait10ms 000F        __end_of_flashLEDs 05D6                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0498             turn@temp_459 0017  
           __psmallconst 0200                  __pcinit 0768                  __ramtop 0200  
                __ptext0 038E                  __ptext1 0202                  __ptext2 06F6  
                __ptext3 071C                  __ptext4 0742                  __ptext5 055C  
                __ptext6 0498                  __ptext7 05D6                  __ptext8 0650  
                __ptext9 06B6              ?_facebeacon 0001     end_of_initialization 0780  
             ??_wait10ms 0011     __end_of_readrightADC 0742        _setpoint_distance 001D  
                turn@ang 0011                  turn@dir 000F               flashLEDs@i 0016  
              _PORTAbits 0F80                _PORTCbits 0F82           __end_of___wmul 071C  
          __pidataCOMRAM 0786      start_initialization 0768              __end_of_acc 06B6  
               ??___wmul 0005            ??_readleftADC 0003                 ?___awdiv 0007  
              _flashLEDs 055C              __smallconst 0200             ??_facebeacon 0001  
           _readrightADC 071C           ___wmul@product 0005                 _LATAbits 0F89  
               _LATBbits 0F8A      __end_of_readleftADC 0768               ?_flashLEDs 0014  
     __end_of_facebeacon 0650               _ADCON0bits 0FC2        ___wmul@multiplier 0001  
               __Hrparam 0000                 __Lrparam 0000                wait10ms@c 0012  
            _readleftADC 0742                 _wait10ms 06B6                 isa$xinst 0000  
            ??_flashLEDs 0016                turn@count 001B                turn@ticks 0019  
           flashLEDs@dur 0014                 turn@temp 0015  
